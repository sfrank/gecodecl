;;; This file was automatically generated by SWIG (http://www.swig.org).
;;; Version 2.0.7
;;;
;;; Do not make changes to this file unless you know what you are doing--modify
;;; the SWIG interface file instead.

(in-package :gecodecl)



(cl:defconstant _GECODEGLUE_H 1)

(cffi:defcfun ("gecode_varargs_create" gecode_varargs_create) :pointer
  (n :int))

(cffi:defcfun ("gecode_varargs_set" gecode_varargs_set) :void
  (v :pointer)
  (i :int)
  (e intvar-type))

(cffi:defcfun ("gecode_varargs_delete" gecode_varargs_delete) :void
  (v :pointer))

(cffi:defcfun ("gecode_intargs_create" gecode_intargs_create) :pointer
  (n :int))

(cffi:defcfun ("gecode_intargs_adr" gecode_intargs_adr) :pointer
  (v :pointer))

(cffi:defcfun ("gecode_intargs_delete" gecode_intargs_delete) :void
  (v :pointer))

(cffi:defcfun ("gecode_init_exceptionHandler" gecode_init_exceptionHandler) :void
  (fptr :pointer))

(cffi:defcfun ("gecode_init_callbackInt" gecode_init_callbackInt) :void
  (fptr :pointer))

(cffi:defcfun ("gecode_intClChannel" gecode_intClChannel) :void
  (space space-type)
  (x0 size)
  (idx :unsigned-int))

(cffi:defcfun ("gecode_space_create" gecode_space_create) :pointer)

(cffi:defcfun ("gecode_space_delete" gecode_space_delete) :void
  (space space-type))

(cffi:defcfun ("gecode_space_copy" gecode_space_copy) :pointer
  (space space-type))

(cffi:defcfun ("gecode_bool_addvar" gecode_bool_addvar) size
  (space space-type))

(cffi:defcfun ("gecode_int_addvar" gecode_int_addvar) size
  (space space-type)
  (min :int)
  (max :int))

(cffi:defcfun ("gecode_float_addvar" gecode_float_addvar) size
  (space space-type)
  (min :double)
  (max :double))

(cffi:defcfun ("gecode_get_boolvar_by_index" gecode_get_boolvar_by_index) :pointer
  (space space-type)
  (index size))

(cffi:defcfun ("gecode_get_intvar_by_index" gecode_get_intvar_by_index) :pointer
  (space space-type)
  (index size))

(cffi:defcfun ("gecode_get_floatvar_by_index" gecode_get_floatvar_by_index) :pointer
  (space space-type)
  (index size))

(cffi:defcfun ("gecode_get_bool_info" gecode_get_bool_info) variable-status
  (space space-type)
  (var boolvar-type)
  (value :pointer))

(cffi:defcfun ("gecode_get_int_info" gecode_get_int_info) variable-status
  (space space-type)
  (var intvar-type)
  (min :pointer)
  (max :pointer)
  (size :pointer))

(cffi:defcfun ("gecode_get_float_info" gecode_get_float_info) variable-status
  (space space-type)
  (var floatvar-type)
  (min :pointer)
  (max :pointer)
  (median :pointer))

(cffi:defcfun ("gecode_branch_ivar" gecode_branch_ivar) :void
  (space space-type)
  (var intvar-type)
  (valb :pointer))

(cffi:defcfun ("gecode_branch_ivars" gecode_branch_ivars) :void
  (space space-type)
  (vars intvarargs-type)
  (varb :pointer)
  (valb :pointer))

(cffi:defcfun ("gecode_branch_bvar" gecode_branch_bvar) :void
  (space space-type)
  (var boolvar-type)
  (valb :pointer))

(cffi:defcfun ("gecode_branch_bvars" gecode_branch_bvars) :void
  (space space-type)
  (vars boolvarargs-type)
  (varb :pointer)
  (valb :pointer))

(cffi:defcfun ("INT_VAR_NONE" INT_VAR_NONE) :pointer)

(cffi:defcfun ("INT_VAR_RND" INT_VAR_RND) :pointer
  (seed :unsigned-int))

(cffi:defcfun ("INT_VAR_DEGREE_MIN" INT_VAR_DEGREE_MIN) :pointer)

(cffi:defcfun ("INT_VAR_DEGREE_MAX" INT_VAR_DEGREE_MAX) :pointer)

(cffi:defcfun ("INT_VAR_AFC_MIN" INT_VAR_AFC_MIN) :pointer)

(cffi:defcfun ("INT_VAR_AFC_MAX" INT_VAR_AFC_MAX) :pointer)

(cffi:defcfun ("INT_VAR_MIN_MIN" INT_VAR_MIN_MIN) :pointer)

(cffi:defcfun ("INT_VAR_MIN_MAX" INT_VAR_MIN_MAX) :pointer)

(cffi:defcfun ("INT_VAR_MAX_MIN" INT_VAR_MAX_MIN) :pointer)

(cffi:defcfun ("INT_VAR_MAX_MAX" INT_VAR_MAX_MAX) :pointer)

(cffi:defcfun ("INT_VAR_SIZE_MIN" INT_VAR_SIZE_MIN) :pointer)

(cffi:defcfun ("INT_VAR_SIZE_MAX" INT_VAR_SIZE_MAX) :pointer)

(cffi:defcfun ("INT_VAR_SIZE_DEGREE_MIN" INT_VAR_SIZE_DEGREE_MIN) :pointer)

(cffi:defcfun ("INT_VAR_SIZE_DEGREE_MAX" INT_VAR_SIZE_DEGREE_MAX) :pointer)

(cffi:defcfun ("INT_VAR_SIZE_AFC_MIN" INT_VAR_SIZE_AFC_MIN) :pointer)

(cffi:defcfun ("INT_VAR_SIZE_AFC_MAX" INT_VAR_SIZE_AFC_MAX) :pointer)

(cffi:defcfun ("INT_VAR_REGRET_MIN_MIN" INT_VAR_REGRET_MIN_MIN) :pointer)

(cffi:defcfun ("INT_VAR_REGRET_MIN_MAX" INT_VAR_REGRET_MIN_MAX) :pointer)

(cffi:defcfun ("INT_VAR_REGRET_MAX_MIN" INT_VAR_REGRET_MAX_MIN) :pointer)

(cffi:defcfun ("INT_VAR_REGRET_MAX_MAX" INT_VAR_REGRET_MAX_MAX) :pointer)

(cffi:defcfun ("INT_VAL_MIN" INT_VAL_MIN) :pointer)

(cffi:defcfun ("INT_VAL_MED" INT_VAL_MED) :pointer)

(cffi:defcfun ("INT_VAL_MAX" INT_VAL_MAX) :pointer)

(cffi:defcfun ("INT_VAL_RND" INT_VAL_RND) :pointer
  (seed :unsigned-int))

(cffi:defcfun ("INT_VAL_SPLIT_MIN" INT_VAL_SPLIT_MIN) :pointer)

(cffi:defcfun ("INT_VAL_SPLIT_MAX" INT_VAL_SPLIT_MAX) :pointer)

(cffi:defcfun ("INT_VAL_RANGE_MIN" INT_VAL_RANGE_MIN) :pointer)

(cffi:defcfun ("INT_VAL_RANGE_MAX" INT_VAL_RANGE_MAX) :pointer)

(cffi:defcfun ("INT_VALUES_MIN" INT_VALUES_MIN) :pointer)

(cffi:defcfun ("INT_VALUES_MAX" INT_VALUES_MAX) :pointer)

(cffi:defcfun ("gecode_dfs_engine_create" gecode_dfs_engine_create) :pointer
  (space space-type))

(cffi:defcfun ("gecode_dfs_engine_delete" gecode_dfs_engine_delete) :void
  (dfs search-type))

(cffi:defcfun ("gecode_dfs_engine_next" gecode_dfs_engine_next) :pointer
  (dfs search-type))

(cffi:defcfun ("gecode_bab_engine_create" gecode_bab_engine_create) :pointer
  (space space-type)
  (minVar size))

(cffi:defcfun ("gecode_bab_engine_delete" gecode_bab_engine_delete) :void
  (bab search-type))

(cffi:defcfun ("gecode_bab_engine_next" gecode_bab_engine_next) :pointer
  (bab search-type))

(cffi:defcfun ("gecode_rel_bvar_int" gecode_rel_bvar_int) :void
  (space space-type)
  (op int-relation-type)
  (v boolvar-type)
  (value :int)
  (icl int-consistency-level))

(cffi:defcfun ("gecode_rel_bvar_bvar" gecode_rel_bvar_bvar) :void
  (space space-type)
  (op int-relation-type)
  (v1 boolvar-type)
  (v2 boolvar-type)
  (icl int-consistency-level))

(cffi:defcfun ("gecode_rel_bvar_int_reified" gecode_rel_bvar_int_reified) :void
  (space space-type)
  (op int-relation-type)
  (v1 boolvar-type)
  (val :int)
  (mode reify-mode)
  (v2 boolvar-type)
  (icl int-consistency-level))

(cffi:defcfun ("gecode_rel_bvar_bvar_reified" gecode_rel_bvar_bvar_reified) :void
  (space space-type)
  (op int-relation-type)
  (v1 boolvar-type)
  (v2 boolvar-type)
  (mode reify-mode)
  (b1 boolvar-type)
  (icl int-consistency-level))

(cffi:defcfun ("gecode_rel_bvars" gecode_rel_bvars) :void
  (space space-type)
  (op int-relation-type)
  (v boolvarargs-type)
  (icl int-consistency-level))

(cffi:defcfun ("gecode_rel_bvars_int" gecode_rel_bvars_int) :void
  (space space-type)
  (op int-relation-type)
  (v boolvarargs-type)
  (value :int)
  (icl int-consistency-level))

(cffi:defcfun ("gecode_rel_bvars_bvars" gecode_rel_bvars_bvars) :void
  (space space-type)
  (op int-relation-type)
  (v1 boolvarargs-type)
  (v2 boolvarargs-type)
  (icl int-consistency-level))

(cffi:defcfun ("gecode_op_bvar_bvar_bvar" gecode_op_bvar_bvar_bvar) :void
  (space space-type)
  (op bool-operation-type)
  (v1 boolvar-type)
  (v2 boolvar-type)
  (b1 boolvar-type)
  (icl int-consistency-level))

(cffi:defcfun ("gecode_op_bvar_bvar_int" gecode_op_bvar_bvar_int) :void
  (space space-type)
  (op bool-operation-type)
  (v1 boolvar-type)
  (v2 boolvar-type)
  (n :int)
  (icl int-consistency-level))

(cffi:defcfun ("gecode_op_bvars_int" gecode_op_bvars_int) :void
  (space space-type)
  (op bool-operation-type)
  (v boolvarargs-type)
  (value :int)
  (icl int-consistency-level))

(cffi:defcfun ("gecode_op_bvars_bvar" gecode_op_bvars_bvar) :void
  (space space-type)
  (op bool-operation-type)
  (v boolvarargs-type)
  (var boolvar-type)
  (icl int-consistency-level))

(cffi:defcfun ("gecode_clause_bvars_bvars_int" gecode_clause_bvars_bvars_int) :void
  (space space-type)
  (op bool-operation-type)
  (v1 boolvarargs-type)
  (v2 boolvarargs-type)
  (n :int)
  (icl int-consistency-level))

(cffi:defcfun ("gecode_clause_bvars_bvars_bvar" gecode_clause_bvars_bvars_bvar) :void
  (space space-type)
  (op bool-operation-type)
  (v1 boolvarargs-type)
  (v2 boolvarargs-type)
  (bvar boolvar-type)
  (icl int-consistency-level))

(cffi:defcfun ("gecode_rel_ivar_int" gecode_rel_ivar_int) :void
  (space space-type)
  (op int-relation-type)
  (v intvar-type)
  (value :int)
  (icl int-consistency-level))

(cffi:defcfun ("gecode_rel_ivar_ivar" gecode_rel_ivar_ivar) :void
  (space space-type)
  (op int-relation-type)
  (v1 intvar-type)
  (v2 intvar-type)
  (icl int-consistency-level))

(cffi:defcfun ("gecode_rel_ivar_int_reified" gecode_rel_ivar_int_reified) :void
  (space space-type)
  (op int-relation-type)
  (v1 intvar-type)
  (val :int)
  (mode reify-mode)
  (b1 boolvar-type)
  (icl int-consistency-level))

(cffi:defcfun ("gecode_rel_ivar_ivar_reified" gecode_rel_ivar_ivar_reified) :void
  (space space-type)
  (op int-relation-type)
  (v1 intvar-type)
  (v2 intvar-type)
  (mode reify-mode)
  (b1 boolvar-type)
  (icl int-consistency-level))

(cffi:defcfun ("gecode_rel_ivars" gecode_rel_ivars) :void
  (space space-type)
  (op int-relation-type)
  (v intvarargs-type)
  (icl int-consistency-level))

(cffi:defcfun ("gecode_rel_ivars_int" gecode_rel_ivars_int) :void
  (space space-type)
  (op int-relation-type)
  (v intvarargs-type)
  (value :int)
  (icl int-consistency-level))

(cffi:defcfun ("gecode_rel_ivars_ivars" gecode_rel_ivars_ivars) :void
  (space space-type)
  (op int-relation-type)
  (v1 intvarargs-type)
  (v2 intvarargs-type)
  (icl int-consistency-level))

(cffi:defcfun ("gecode_distinct_ivars" gecode_distinct_ivars) :void
  (space space-type)
  (va intvarargs-type)
  (icl int-consistency-level))

(cffi:defcfun ("gecode_distinct_ints_ivars" gecode_distinct_ints_ivars) :void
  (space space-type)
  (ia intargs-type)
  (va intvarargs-type)
  (icl int-consistency-level))

(cffi:defcfun ("gecode_sorted_ivars_ivars" gecode_sorted_ivars_ivars) :void
  (space space-type)
  (xvars intvarargs-type)
  (yvars intvarargs-type)
  (icl int-consistency-level))

(cffi:defcfun ("gecode_sorted_ivars_ivars_ivars" gecode_sorted_ivars_ivars_ivars) :void
  (space space-type)
  (xvars intvarargs-type)
  (yvars intvarargs-type)
  (zvars intvarargs-type)
  (icl int-consistency-level))

(cffi:defcfun ("gecode_channel_ivars_ivars" gecode_channel_ivars_ivars) :void
  (space space-type)
  (v1 intvarargs-type)
  (v2 intvarargs-type)
  (icl int-consistency-level))

(cffi:defcfun ("gecode_channel_ivars_int_ivars_int" gecode_channel_ivars_int_ivars_int) :void
  (space space-type)
  (v1 intvarargs-type)
  (xoff :int)
  (v2 intvarargs-type)
  (yoff :int)
  (icl int-consistency-level))

(cffi:defcfun ("gecode_channel_bvar_ivar" gecode_channel_bvar_ivar) :void
  (space space-type)
  (bvar boolvar-type)
  (ivar intvar-type)
  (icl int-consistency-level))

(cffi:defcfun ("gecode_channel_ivar_bvar" gecode_channel_ivar_bvar) :void
  (space space-type)
  (ivar intvar-type)
  (bvar boolvar-type)
  (icl int-consistency-level))

(cffi:defcfun ("gecode_channel_bvars_ivar_int" gecode_channel_bvars_ivar_int) :void
  (space space-type)
  (v1 boolvarargs-type)
  (ivar intvar-type)
  (offset :int)
  (icl int-consistency-level))

(cffi:defcfun ("gecode_min_ivar_ivar_ivar" gecode_min_ivar_ivar_ivar) :void
  (space space-type)
  (x1 intvar-type)
  (x2 intvar-type)
  (ret intvar-type)
  (icl int-consistency-level))

(cffi:defcfun ("gecode_min_ivars_ivar" gecode_min_ivars_ivar) :void
  (space space-type)
  (v intvarargs-type)
  (y intvar-type)
  (icl int-consistency-level))

(cffi:defcfun ("gecode_max_ivar_ivar_ivar" gecode_max_ivar_ivar_ivar) :void
  (space space-type)
  (x1 intvar-type)
  (x2 intvar-type)
  (ret intvar-type)
  (icl int-consistency-level))

(cffi:defcfun ("gecode_max_ivars_ivar" gecode_max_ivars_ivar) :void
  (space space-type)
  (v intvarargs-type)
  (y intvar-type)
  (icl int-consistency-level))

(cffi:defcfun ("gecode_abs_ivar_ivar" gecode_abs_ivar_ivar) :void
  (space space-type)
  (x1 intvar-type)
  (x2 intvar-type)
  (icl int-consistency-level))

(cffi:defcfun ("gecode_mul_ivar_ivar_ivar" gecode_mul_ivar_ivar_ivar) :void
  (space space-type)
  (x1 intvar-type)
  (x2 intvar-type)
  (ret intvar-type)
  (icl int-consistency-level))

(cffi:defcfun ("gecode_sqr_ivar_ivar" gecode_sqr_ivar_ivar) :void
  (space space-type)
  (x1 intvar-type)
  (x2 intvar-type)
  (icl int-consistency-level))

(cffi:defcfun ("gecode_sqrt_ivar_ivar" gecode_sqrt_ivar_ivar) :void
  (space space-type)
  (x1 intvar-type)
  (x2 intvar-type)
  (icl int-consistency-level))

(cffi:defcfun ("gecode_divmod_ivar_ivar_ivar_ivar" gecode_divmod_ivar_ivar_ivar_ivar) :void
  (space space-type)
  (x0 intvar-type)
  (x1 intvar-type)
  (x2 intvar-type)
  (x3 intvar-type)
  (icl int-consistency-level))

(cffi:defcfun ("gecode_div_ivar_ivar_ivar" gecode_div_ivar_ivar_ivar) :void
  (space space-type)
  (x1 intvar-type)
  (x2 intvar-type)
  (ret intvar-type)
  (icl int-consistency-level))

(cffi:defcfun ("gecode_mod_ivar_ivar_ivar" gecode_mod_ivar_ivar_ivar) :void
  (space space-type)
  (x1 intvar-type)
  (x2 intvar-type)
  (ret intvar-type)
  (icl int-consistency-level))

(cffi:defcfun ("gecode_lin_ivars_int" gecode_lin_ivars_int) :void
  (space space-type)
  (rel int-relation-type)
  (v intvarargs-type)
  (value :int)
  (icl int-consistency-level))

(cffi:defcfun ("gecode_lin_ivars_ivar" gecode_lin_ivars_ivar) :void
  (space space-type)
  (rel int-relation-type)
  (v intvarargs-type)
  (var intvar-type)
  (icl int-consistency-level))

(cffi:defcfun ("gecode_lin_ivars_int_reified" gecode_lin_ivars_int_reified) :void
  (space space-type)
  (rel int-relation-type)
  (v intvarargs-type)
  (value :int)
  (mode reify-mode)
  (bvar boolvar-type)
  (icl int-consistency-level))

(cffi:defcfun ("gecode_lin_ivars_ivar_reified" gecode_lin_ivars_ivar_reified) :void
  (space space-type)
  (rel int-relation-type)
  (v intvarargs-type)
  (var intvar-type)
  (mode reify-mode)
  (bvar boolvar-type)
  (icl int-consistency-level))

(cffi:defcfun ("gecode_lin_ints_ivars_int" gecode_lin_ints_ivars_int) :void
  (space space-type)
  (rel int-relation-type)
  (ints intargs-type)
  (v intvarargs-type)
  (value :int)
  (icl int-consistency-level))

(cffi:defcfun ("gecode_lin_ints_ivars_ivar" gecode_lin_ints_ivars_ivar) :void
  (space space-type)
  (rel int-relation-type)
  (ints intargs-type)
  (v intvarargs-type)
  (var intvar-type)
  (icl int-consistency-level))

(cffi:defcfun ("gecode_lin_ints_ivars_int_reified" gecode_lin_ints_ivars_int_reified) :void
  (space space-type)
  (rel int-relation-type)
  (ints intargs-type)
  (v intvarargs-type)
  (value :int)
  (mode reify-mode)
  (bvar boolvar-type)
  (icl int-consistency-level))

(cffi:defcfun ("gecode_lin_ints_ivars_ivar_reified" gecode_lin_ints_ivars_ivar_reified) :void
  (space space-type)
  (rel int-relation-type)
  (ints intargs-type)
  (v intvarargs-type)
  (var intvar-type)
  (mode reify-mode)
  (bvar boolvar-type)
  (icl int-consistency-level))

(cffi:defcfun ("gecode_lin_bvars_int" gecode_lin_bvars_int) :void
  (space space-type)
  (rel int-relation-type)
  (v boolvarargs-type)
  (value :int)
  (icl int-consistency-level))

(cffi:defcfun ("gecode_lin_bvars_ivar" gecode_lin_bvars_ivar) :void
  (space space-type)
  (rel int-relation-type)
  (v boolvarargs-type)
  (var intvar-type)
  (icl int-consistency-level))

(cffi:defcfun ("gecode_lin_bvars_int_reified" gecode_lin_bvars_int_reified) :void
  (space space-type)
  (rel int-relation-type)
  (v boolvarargs-type)
  (value :int)
  (mode reify-mode)
  (bvar boolvar-type)
  (icl int-consistency-level))

(cffi:defcfun ("gecode_lin_bvars_ivar_reified" gecode_lin_bvars_ivar_reified) :void
  (space space-type)
  (rel int-relation-type)
  (v boolvarargs-type)
  (var intvar-type)
  (mode reify-mode)
  (bvar boolvar-type)
  (icl int-consistency-level))

(cffi:defcfun ("gecode_lin_ints_bvars_int" gecode_lin_ints_bvars_int) :void
  (space space-type)
  (rel int-relation-type)
  (ints intargs-type)
  (v boolvarargs-type)
  (value :int)
  (icl int-consistency-level))

(cffi:defcfun ("gecode_lin_ints_bvars_ivar" gecode_lin_ints_bvars_ivar) :void
  (space space-type)
  (rel int-relation-type)
  (ints intargs-type)
  (v boolvarargs-type)
  (var intvar-type)
  (icl int-consistency-level))

(cffi:defcfun ("gecode_lin_ints_bvars_int_reified" gecode_lin_ints_bvars_int_reified) :void
  (space space-type)
  (rel int-relation-type)
  (ints intargs-type)
  (v boolvarargs-type)
  (value :int)
  (mode reify-mode)
  (bvar boolvar-type)
  (icl int-consistency-level))

(cffi:defcfun ("gecode_lin_ints_bvars_ivar_reified" gecode_lin_ints_bvars_ivar_reified) :void
  (space space-type)
  (rel int-relation-type)
  (ints intargs-type)
  (v boolvarargs-type)
  (var intvar-type)
  (mode reify-mode)
  (bvar boolvar-type)
  (icl int-consistency-level))


